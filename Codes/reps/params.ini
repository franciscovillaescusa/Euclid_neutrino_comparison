######################## reps ###### BC #######################################
###############################################################################
This is a commented version of the params.ini file for running reps
./ reps params.ini
If you want to see some examples with different cosmologies and/or different
choices for boltzmann code or neutrino approximations, have a look at the files
in the folder EXAMPLES.
###############################################################################

# Cosmology

h         =     0.6711
OB0       =     0.0490
OC0       =     0.2649241396655814
# This is Omega_\gamma h^2
OG0       =     2.469e-05
# Note that Neff is actually Delta Neff and should be set following the same
# convention as in class (for 0, 1, 2 or 3 massive neutrinos, 3.046, 2.0328,
# 1.0196, 0.00641 respectively)
N_nu      =     3.0
Neff      =     0.00641
M_nu      =     0.15
w0        =    -1.0
wa        =     0.0
As        =     2.13e-09
tau_reio  =     0.0925
ns        =     0.9624
kmax      =     50.0

# Other parameters

# Boundary conditions
# You have to specify your boundary conditions for the solution of the
# differential equations. The code expects a file containing
# k beta_b beta_nu f_b f_c f_nu
# where beta_b = delta_b / delta_cdm at z_initial
# beta_nu = delta_nu / delta_cdm at z_initial
# and f_i are the growth rates af baryons, cdm and neutrinos at z_initial
# You can provide your own file setting use_boundary_conditions_from_file = T
# and boundary_conditions_file = path/to/your/file or you can let the code do
# everything by setting use_boundary_conditions_from_file = F (default) and
# specifying a boltzmann_code and boltzmann_folder
use_boundary_conditions_from_file = F
boundary_conditions_file = boundary_conditions.dat
# If you let REPS handle the boundary conditions, you can choose 3 options,
# by conveniently setting which_bc (default is 0)
# 0] correct from boltzmann code (numeric computation of growth rates)
# 1] f_cb = Omega_m ^ 0.55
# 2] f_nu = Omega_m ^ 0.55
# 3] both f_cb and f_nu = Omega_m ^ 0.55
# !!! for computing ICs for simulations you should choose which_bc = 0
which_bc     =       0

# z=0 power spectrum (the power spectrum to be rescaled)
# If you want to compute Pk(z=0) calling the boltzmann code provided above,
# set compute_Pk_0 = T. Otherwise set it to F and specify a power spectrum
# in file_Pk_0_in
compute_Pk_0  =      T
file_Pk_0_in  =      PK_TABS/power_norm_z1_pk.dat

# If either use_boundary_conditions_from_file = F or compute_Pk_0 = T, then
# you have to specify which boltzmann code REPS will call, and its local path
# on your machine
# Specify either camb or class
boltzmann_code =   camb
# Specify the path of your boltzmann folder
boltzmann_folder = /home/user/CAMB_2015/
# If you are using camb you can easily choose the number of wavenumbers
# per logarithmic interval (if you are using class, you need to change it
# in the code and recompile)
k_per_logint_camb = 10
# If you use class and want to specify a file containing its precision
# settings, uncomment the following and introduce the path to such file.
# If not specified, the default value of this variable is "none".
# class_precision_file = none
# When using class, in addition you can specify the path of a reference
# class parameter file, containing only the cosmological parameters and
# settings you want to use. Type of outputs, redshifts and kmax will be
# added by reps, so should not be specified. The default value here is
# "none", and in this case reps prepare its own parameter files.
# class_base_par_file = none

# Specify output options
# Output file root
outputfile    =      mnu015_scenario00
# Output format; choose among: camb transfer function, ngenic transfer function
# or power spectra (default)
output_format =      camb transfer functions

# Neutrino treatment - wrong_nu can be
# 0] correct neutrino treatment
# 1] neutrinos are rel only in the background - scen.4 in arXiv 1605.05283
# 2] neutrinos are all treated as a non-rel species - scen.5 in arXiv 1605.05283
# !!! for computing ICs for simulations you should choose wrong_nu = 1 or 2 in
# order to be consistent with your simulation code (if you choose 1, you
# probably will have to provide your simulation with the tabulated Hubble
# function that you can obtain with print_hubble = T)
wrong_nu        =    0
# If you want to print a tabulated Hubble function consistent with the rescaling
# specifications chosen (with/without radiation in background, accounting or not
# accounting for relativistic neutrinos ... ) set this to T
print_hubble    =    T
# Initial and final redshift; initial redshift is the initial redshift of your
# simulation. Final redshift should in principle be 0. If you want to rescale
# a power spectrum that is not at redshift 0, you should modify the value of
# alpha in INCLUDE/global_variables.h, in order to obtain correctly normalised
# results. The definition of alpha is in arXiv 1605.05283.
z_final    =     0.
z_initial  =    99.
# Number and redshifts of the required outputs
output_number =  4
z_output      =  0.0 1.0 10.0 99.0
